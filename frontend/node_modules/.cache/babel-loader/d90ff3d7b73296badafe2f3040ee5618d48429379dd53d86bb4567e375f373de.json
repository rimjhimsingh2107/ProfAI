{"ast":null,"code":"var _jsxFileName = \"/Users/rimjhim/Documents/GitHub/ProfAI/frontend/src/hooks/useAuth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, createContext, useContext } from 'react';\nimport { onAuthStateChanged, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { auth, db } from '../config/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport function useAuth() {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst createDefaultLearningProfile = () => ({\n  preferredLearningStyle: 'mixed',\n  conceptualUnderstanding: 5,\n  practicalSkills: 5,\n  preferredPace: 'medium',\n  interestsTopics: [],\n  difficultConcepts: [],\n  masteredConcepts: [],\n  totalInteractions: 0,\n  averageSessionDuration: 0,\n  preferredExplanationDepth: 'intermediate',\n  responseToEncouragement: 5,\n  confusionPatterns: []\n});\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const createUserProfile = async firebaseUser => {\n    const userRef = doc(db, 'users', firebaseUser.uid);\n    const userSnap = await getDoc(userRef);\n    if (!userSnap.exists()) {\n      const newUser = {\n        id: firebaseUser.uid,\n        email: firebaseUser.email,\n        displayName: firebaseUser.displayName || undefined,\n        photoURL: firebaseUser.photoURL || undefined,\n        learningProfile: createDefaultLearningProfile(),\n        createdAt: new Date(),\n        lastActiveAt: new Date()\n      };\n      await setDoc(userRef, {\n        ...newUser,\n        createdAt: newUser.createdAt.toISOString(),\n        lastActiveAt: newUser.lastActiveAt.toISOString()\n      });\n      return newUser;\n    } else {\n      const userData = userSnap.data();\n      return {\n        ...userData,\n        createdAt: new Date(userData.createdAt),\n        lastActiveAt: new Date(userData.lastActiveAt)\n      };\n    }\n  };\n  const login = async (email, password) => {\n    await signInWithEmailAndPassword(auth, email, password);\n  };\n  const signup = async (email, password) => {\n    await createUserWithEmailAndPassword(auth, email, password);\n  };\n  const loginWithGoogle = async () => {\n    const provider = new GoogleAuthProvider();\n    await signInWithPopup(auth, provider);\n  };\n  const logout = async () => {\n    await signOut(auth);\n  };\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async firebaseUser => {\n      if (firebaseUser) {\n        try {\n          const user = await createUserProfile(firebaseUser);\n          setCurrentUser(user);\n        } catch (error) {\n          console.error('Error creating user profile:', error);\n        }\n      } else {\n        setCurrentUser(null);\n      }\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    loading,\n    login,\n    signup,\n    loginWithGoogle,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","useEffect","createContext","useContext","onAuthStateChanged","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","GoogleAuthProvider","signInWithPopup","doc","getDoc","setDoc","auth","db","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","createDefaultLearningProfile","preferredLearningStyle","conceptualUnderstanding","practicalSkills","preferredPace","interestsTopics","difficultConcepts","masteredConcepts","totalInteractions","averageSessionDuration","preferredExplanationDepth","responseToEncouragement","confusionPatterns","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","createUserProfile","firebaseUser","userRef","uid","userSnap","exists","newUser","id","email","displayName","photoURL","learningProfile","createdAt","Date","lastActiveAt","toISOString","userData","data","login","password","signup","loginWithGoogle","provider","logout","unsubscribe","user","error","console","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rimjhim/Documents/GitHub/ProfAI/frontend/src/hooks/useAuth.tsx"],"sourcesContent":["import { useState, useEffect, createContext, useContext } from 'react';\nimport { \n  User as FirebaseUser,\n  onAuthStateChanged,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  signOut,\n  GoogleAuthProvider,\n  signInWithPopup\n} from 'firebase/auth';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { auth, db } from '../config/firebase';\nimport { User, LearningProfile } from '../types';\n\ninterface AuthContextType {\n  currentUser: User | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  signup: (email: string, password: string) => Promise<void>;\n  loginWithGoogle: () => Promise<void>;\n  logout: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n\nconst createDefaultLearningProfile = (): LearningProfile => ({\n  preferredLearningStyle: 'mixed',\n  conceptualUnderstanding: 5,\n  practicalSkills: 5,\n  preferredPace: 'medium',\n  interestsTopics: [],\n  difficultConcepts: [],\n  masteredConcepts: [],\n  totalInteractions: 0,\n  averageSessionDuration: 0,\n  preferredExplanationDepth: 'intermediate',\n  responseToEncouragement: 5,\n  confusionPatterns: []\n});\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const createUserProfile = async (firebaseUser: FirebaseUser): Promise<User> => {\n    const userRef = doc(db, 'users', firebaseUser.uid);\n    const userSnap = await getDoc(userRef);\n\n    if (!userSnap.exists()) {\n      const newUser: User = {\n        id: firebaseUser.uid,\n        email: firebaseUser.email!,\n        displayName: firebaseUser.displayName || undefined,\n        photoURL: firebaseUser.photoURL || undefined,\n        learningProfile: createDefaultLearningProfile(),\n        createdAt: new Date(),\n        lastActiveAt: new Date()\n      };\n\n      await setDoc(userRef, {\n        ...newUser,\n        createdAt: newUser.createdAt.toISOString(),\n        lastActiveAt: newUser.lastActiveAt.toISOString()\n      });\n\n      return newUser;\n    } else {\n      const userData = userSnap.data();\n      return {\n        ...userData,\n        createdAt: new Date(userData.createdAt),\n        lastActiveAt: new Date(userData.lastActiveAt)\n      } as User;\n    }\n  };\n\n  const login = async (email: string, password: string) => {\n    await signInWithEmailAndPassword(auth, email, password);\n  };\n\n  const signup = async (email: string, password: string) => {\n    await createUserWithEmailAndPassword(auth, email, password);\n  };\n\n  const loginWithGoogle = async () => {\n    const provider = new GoogleAuthProvider();\n    await signInWithPopup(auth, provider);\n  };\n\n  const logout = async () => {\n    await signOut(auth);\n  };\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {\n      if (firebaseUser) {\n        try {\n          const user = await createUserProfile(firebaseUser);\n          setCurrentUser(user);\n        } catch (error) {\n          console.error('Error creating user profile:', error);\n        }\n      } else {\n        setCurrentUser(null);\n      }\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    loading,\n    login,\n    signup,\n    loginWithGoogle,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}