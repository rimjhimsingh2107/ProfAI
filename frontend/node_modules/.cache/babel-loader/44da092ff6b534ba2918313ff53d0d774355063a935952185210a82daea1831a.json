{"ast":null,"code":"var _jsxFileName = \"/Users/rimjhim/Documents/GitHub/ProfAI/frontend/src/App_simple_working.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const [textInput, setTextInput] = useState('');\n  const [conversationMode, setConversationMode] = useState('podcast');\n  const recognitionRef = useRef(null);\n  const audioPlayerRef = useRef(null);\n\n  // Initialize speech recognition\n  useEffect(() => {\n    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      recognitionRef.current = new SpeechRecognition();\n      recognitionRef.current.continuous = true;\n      recognitionRef.current.interimResults = true;\n      recognitionRef.current.lang = 'en-US';\n      recognitionRef.current.onresult = event => {\n        let finalTranscript = '';\n        for (let i = event.resultIndex; i < event.results.length; i++) {\n          if (event.results[i].isFinal) {\n            finalTranscript += event.results[i][0].transcript;\n          }\n        }\n        if (finalTranscript) {\n          setTranscript(finalTranscript);\n          handleInput(finalTranscript, true);\n          stopListening();\n        }\n      };\n      recognitionRef.current.onend = () => setIsListening(false);\n      recognitionRef.current.onerror = () => setIsListening(false);\n    }\n  }, []);\n  const startListening = () => {\n    if (recognitionRef.current && !isListening && !isProcessing && !isSpeaking) {\n      setIsListening(true);\n      setTranscript('');\n      recognitionRef.current.start();\n    }\n  };\n  const stopListening = () => {\n    if (recognitionRef.current && isListening) {\n      setIsListening(false);\n      recognitionRef.current.stop();\n    }\n  };\n  const handleInput = async (text, isVoice = false) => {\n    if (!text.trim()) return;\n    setIsProcessing(true);\n    setTextInput('');\n    setTranscript('');\n    const userMessage = {\n      id: Date.now(),\n      role: 'user',\n      content: text,\n      timestamp: new Date(),\n      isVoice\n    };\n    setConversation(prev => [...prev, userMessage]);\n    try {\n      const response = await fetch(`http://localhost:5001/api/podcast`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: text,\n          conversationHistory: []\n        })\n      });\n      const data = await response.json();\n      console.log('Got response:', data);\n      const podcastMessage = {\n        id: Date.now() + 1,\n        role: 'podcast',\n        content: data.summary || 'Discussion',\n        timestamp: new Date(),\n        segments: data.segments || []\n      };\n      setConversation(prev => [...prev, podcastMessage]);\n\n      // Play the segments\n      if (data.segments && data.segments.length > 0) {\n        playSegments(data.segments, 0);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n    setIsProcessing(false);\n  };\n  const playSegments = async (segments, index) => {\n    if (!segments || index >= segments.length) {\n      setIsSpeaking(false);\n      return;\n    }\n    setIsSpeaking(true);\n    const segment = segments[index];\n    console.log(`Playing segment ${index + 1}: ${segment.speaker}`);\n    if (segment.audio_data) {\n      // Try OpenAI audio first\n      try {\n        const audioData = new Uint8Array(segment.audio_data.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\n        const audioBlob = new Blob([audioData], {\n          type: 'audio/mpeg'\n        });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        const audio = new Audio(audioUrl);\n        audioPlayerRef.current = audio;\n        audio.onended = () => {\n          URL.revokeObjectURL(audioUrl);\n          setTimeout(() => playSegments(segments, index + 1), 500);\n        };\n        audio.onerror = () => {\n          console.log('OpenAI audio failed, using browser TTS');\n          URL.revokeObjectURL(audioUrl);\n          playWithTTS(segment, () => playSegments(segments, index + 1));\n        };\n        await audio.play();\n        console.log('Playing OpenAI audio');\n        return;\n      } catch (e) {\n        console.log('OpenAI audio error:', e);\n      }\n    }\n\n    // Fallback to TTS\n    playWithTTS(segment, () => playSegments(segments, index + 1));\n  };\n  const playWithTTS = (segment, onComplete) => {\n    const utterance = new SpeechSynthesisUtterance(segment.text);\n    const voices = speechSynthesis.getVoices();\n\n    // Simple voice selection\n    if (segment.speaker === 'Sarah') {\n      const femaleVoice = voices.find(v => v.lang.startsWith('en') && (v.name.includes('Samantha') || v.name.includes('Karen')));\n      if (femaleVoice) utterance.voice = femaleVoice;\n      utterance.pitch = 1.1;\n    } else {\n      const maleVoice = voices.find(v => v.lang.startsWith('en') && (v.name.includes('Alex') || v.name.includes('Daniel')));\n      if (maleVoice) utterance.voice = maleVoice;\n      utterance.pitch = 0.9;\n    }\n    utterance.rate = 0.9;\n    utterance.volume = 0.8;\n    utterance.onend = () => {\n      setTimeout(onComplete, 500);\n    };\n    speechSynthesis.speak(utterance);\n    console.log(`Playing TTS for ${segment.speaker}`);\n  };\n  const stopSpeaking = () => {\n    setIsSpeaking(false);\n    speechSynthesis.cancel();\n    if (audioPlayerRef.current) {\n      audioPlayerRef.current.pause();\n      audioPlayerRef.current = null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-slate-900 via-gray-900 to-slate-800 text-white p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-2\",\n          children: \"ProfAI - Working Version\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: \"Simple audio test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800/50 rounded-2xl p-8 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mb-8\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: isListening ? stopListening : startListening,\n            disabled: isProcessing || isSpeaking,\n            className: `w-20 h-20 rounded-full flex items-center justify-center text-2xl transition-all ${isListening ? 'bg-red-500 animate-pulse' : isProcessing ? 'bg-yellow-500' : isSpeaking ? 'bg-blue-500' : 'bg-gradient-to-br from-purple-500 to-pink-600 hover:scale-105'} disabled:opacity-50`,\n            children: isProcessing ? '‚è≥' : 'üé§'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-6\",\n          children: [isListening && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-400\",\n            children: [\"Listening... \\\"\", transcript, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-yellow-400\",\n            children: \"Creating discussion...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 30\n          }, this), isSpeaking && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-blue-400\",\n            children: \"Speaking...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 28\n          }, this), !isListening && !isProcessing && !isSpeaking && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-400\",\n            children: \"Click microphone to ask a question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), isSpeaking && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: stopSpeaking,\n            className: \"px-6 py-3 bg-red-500 hover:bg-red-600 rounded-lg\",\n            children: \"Stop Speaking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            handleInput(textInput);\n          },\n          className: \"flex gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: textInput,\n            onChange: e => setTextInput(e.target.value),\n            placeholder: \"Or type your question...\",\n            disabled: isListening || isProcessing || isSpeaking,\n            className: \"flex-1 px-4 py-3 bg-gray-700/50 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !textInput.trim() || isListening || isProcessing || isSpeaking,\n            className: \"px-6 py-3 bg-blue-500 hover:bg-blue-600 rounded-lg disabled:opacity-50\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800/50 rounded-2xl p-6 max-h-96 overflow-y-auto\",\n        children: conversation.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-gray-500\",\n          children: \"No conversation yet...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this) : conversation.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-4 rounded-lg bg-gray-700/50\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium text-sm text-gray-400 mb-2\",\n            children: msg.role === 'user' ? 'You' : 'Sarah & Marcus Discussion'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-white\",\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this), msg.segments && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 space-y-1 text-sm\",\n            children: msg.segments.map((seg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-300\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-blue-400\",\n                children: [seg.speaker, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 25\n              }, this), \" \", seg.text]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 19\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vRmWEO5pqVQh/7U4zAOHEYdRC4U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","isListening","setIsListening","isProcessing","setIsProcessing","isSpeaking","setIsSpeaking","transcript","setTranscript","conversation","setConversation","textInput","setTextInput","conversationMode","setConversationMode","recognitionRef","audioPlayerRef","window","SpeechRecognition","webkitSpeechRecognition","current","continuous","interimResults","lang","onresult","event","finalTranscript","i","resultIndex","results","length","isFinal","handleInput","stopListening","onend","onerror","startListening","start","stop","text","isVoice","trim","userMessage","id","Date","now","role","content","timestamp","prev","response","fetch","method","headers","body","JSON","stringify","message","conversationHistory","data","json","console","log","podcastMessage","summary","segments","playSegments","error","index","segment","speaker","audio_data","audioData","Uint8Array","match","map","byte","parseInt","audioBlob","Blob","type","audioUrl","URL","createObjectURL","audio","Audio","onended","revokeObjectURL","setTimeout","playWithTTS","play","e","onComplete","utterance","SpeechSynthesisUtterance","voices","speechSynthesis","getVoices","femaleVoice","find","v","startsWith","name","includes","voice","pitch","maleVoice","rate","volume","speak","stopSpeaking","cancel","pause","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onSubmit","preventDefault","value","onChange","target","placeholder","msg","seg","_c","$RefreshReg$"],"sources":["/Users/rimjhim/Documents/GitHub/ProfAI/frontend/src/App_simple_working.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './index.css';\n\nfunction App() {\n  const [isListening, setIsListening] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const [textInput, setTextInput] = useState('');\n  const [conversationMode, setConversationMode] = useState('podcast');\n  \n  const recognitionRef = useRef(null);\n  const audioPlayerRef = useRef(null);\n\n  // Initialize speech recognition\n  useEffect(() => {\n    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      recognitionRef.current = new SpeechRecognition();\n      recognitionRef.current.continuous = true;\n      recognitionRef.current.interimResults = true;\n      recognitionRef.current.lang = 'en-US';\n\n      recognitionRef.current.onresult = (event) => {\n        let finalTranscript = '';\n        for (let i = event.resultIndex; i < event.results.length; i++) {\n          if (event.results[i].isFinal) {\n            finalTranscript += event.results[i][0].transcript;\n          }\n        }\n        if (finalTranscript) {\n          setTranscript(finalTranscript);\n          handleInput(finalTranscript, true);\n          stopListening();\n        }\n      };\n\n      recognitionRef.current.onend = () => setIsListening(false);\n      recognitionRef.current.onerror = () => setIsListening(false);\n    }\n  }, []);\n\n  const startListening = () => {\n    if (recognitionRef.current && !isListening && !isProcessing && !isSpeaking) {\n      setIsListening(true);\n      setTranscript('');\n      recognitionRef.current.start();\n    }\n  };\n\n  const stopListening = () => {\n    if (recognitionRef.current && isListening) {\n      setIsListening(false);\n      recognitionRef.current.stop();\n    }\n  };\n\n  const handleInput = async (text, isVoice = false) => {\n    if (!text.trim()) return;\n\n    setIsProcessing(true);\n    setTextInput('');\n    setTranscript('');\n    \n    const userMessage = {\n      id: Date.now(),\n      role: 'user',\n      content: text,\n      timestamp: new Date(),\n      isVoice\n    };\n    \n    setConversation(prev => [...prev, userMessage]);\n\n    try {\n      const response = await fetch(`http://localhost:5001/api/podcast`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: text, conversationHistory: [] })\n      });\n      \n      const data = await response.json();\n      console.log('Got response:', data);\n      \n      const podcastMessage = {\n        id: Date.now() + 1,\n        role: 'podcast',\n        content: data.summary || 'Discussion',\n        timestamp: new Date(),\n        segments: data.segments || []\n      };\n      \n      setConversation(prev => [...prev, podcastMessage]);\n      \n      // Play the segments\n      if (data.segments && data.segments.length > 0) {\n        playSegments(data.segments, 0);\n      }\n      \n    } catch (error) {\n      console.error('Error:', error);\n    }\n    \n    setIsProcessing(false);\n  };\n\n  const playSegments = async (segments, index) => {\n    if (!segments || index >= segments.length) {\n      setIsSpeaking(false);\n      return;\n    }\n\n    setIsSpeaking(true);\n    const segment = segments[index];\n    console.log(`Playing segment ${index + 1}: ${segment.speaker}`);\n\n    if (segment.audio_data) {\n      // Try OpenAI audio first\n      try {\n        const audioData = new Uint8Array(\n          segment.audio_data.match(/.{1,2}/g).map(byte => parseInt(byte, 16))\n        );\n        const audioBlob = new Blob([audioData], { type: 'audio/mpeg' });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        \n        const audio = new Audio(audioUrl);\n        audioPlayerRef.current = audio;\n        \n        audio.onended = () => {\n          URL.revokeObjectURL(audioUrl);\n          setTimeout(() => playSegments(segments, index + 1), 500);\n        };\n        \n        audio.onerror = () => {\n          console.log('OpenAI audio failed, using browser TTS');\n          URL.revokeObjectURL(audioUrl);\n          playWithTTS(segment, () => playSegments(segments, index + 1));\n        };\n        \n        await audio.play();\n        console.log('Playing OpenAI audio');\n        return;\n        \n      } catch (e) {\n        console.log('OpenAI audio error:', e);\n      }\n    }\n    \n    // Fallback to TTS\n    playWithTTS(segment, () => playSegments(segments, index + 1));\n  };\n\n  const playWithTTS = (segment, onComplete) => {\n    const utterance = new SpeechSynthesisUtterance(segment.text);\n    const voices = speechSynthesis.getVoices();\n    \n    // Simple voice selection\n    if (segment.speaker === 'Sarah') {\n      const femaleVoice = voices.find(v => \n        v.lang.startsWith('en') && \n        (v.name.includes('Samantha') || v.name.includes('Karen'))\n      );\n      if (femaleVoice) utterance.voice = femaleVoice;\n      utterance.pitch = 1.1;\n    } else {\n      const maleVoice = voices.find(v => \n        v.lang.startsWith('en') && \n        (v.name.includes('Alex') || v.name.includes('Daniel'))\n      );\n      if (maleVoice) utterance.voice = maleVoice;\n      utterance.pitch = 0.9;\n    }\n    \n    utterance.rate = 0.9;\n    utterance.volume = 0.8;\n    \n    utterance.onend = () => {\n      setTimeout(onComplete, 500);\n    };\n    \n    speechSynthesis.speak(utterance);\n    console.log(`Playing TTS for ${segment.speaker}`);\n  };\n\n  const stopSpeaking = () => {\n    setIsSpeaking(false);\n    speechSynthesis.cancel();\n    if (audioPlayerRef.current) {\n      audioPlayerRef.current.pause();\n      audioPlayerRef.current = null;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-gray-900 to-slate-800 text-white p-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2\">ProfAI - Working Version</h1>\n          <p className=\"text-gray-400\">Simple audio test</p>\n        </div>\n\n        <div className=\"bg-gray-800/50 rounded-2xl p-8 mb-8\">\n          {/* Microphone Button */}\n          <div className=\"flex justify-center mb-8\">\n            <button\n              onClick={isListening ? stopListening : startListening}\n              disabled={isProcessing || isSpeaking}\n              className={`w-20 h-20 rounded-full flex items-center justify-center text-2xl transition-all ${\n                isListening ? 'bg-red-500 animate-pulse' : \n                isProcessing ? 'bg-yellow-500' :\n                isSpeaking ? 'bg-blue-500' :\n                'bg-gradient-to-br from-purple-500 to-pink-600 hover:scale-105'\n              } disabled:opacity-50`}\n            >\n              {isProcessing ? '‚è≥' : 'üé§'}\n            </button>\n          </div>\n\n          {/* Status */}\n          <div className=\"text-center mb-6\">\n            {isListening && <p className=\"text-green-400\">Listening... \"{transcript}\"</p>}\n            {isProcessing && <p className=\"text-yellow-400\">Creating discussion...</p>}\n            {isSpeaking && <p className=\"text-blue-400\">Speaking...</p>}\n            {!isListening && !isProcessing && !isSpeaking && (\n              <p className=\"text-gray-400\">Click microphone to ask a question</p>\n            )}\n          </div>\n\n          {/* Stop Button */}\n          {isSpeaking && (\n            <div className=\"flex justify-center mb-6\">\n              <button\n                onClick={stopSpeaking}\n                className=\"px-6 py-3 bg-red-500 hover:bg-red-600 rounded-lg\"\n              >\n                Stop Speaking\n              </button>\n            </div>\n          )}\n\n          {/* Text Input */}\n          <form onSubmit={(e) => { e.preventDefault(); handleInput(textInput); }} className=\"flex gap-3\">\n            <input\n              type=\"text\"\n              value={textInput}\n              onChange={(e) => setTextInput(e.target.value)}\n              placeholder=\"Or type your question...\"\n              disabled={isListening || isProcessing || isSpeaking}\n              className=\"flex-1 px-4 py-3 bg-gray-700/50 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-blue-500\"\n            />\n            <button\n              type=\"submit\"\n              disabled={!textInput.trim() || isListening || isProcessing || isSpeaking}\n              className=\"px-6 py-3 bg-blue-500 hover:bg-blue-600 rounded-lg disabled:opacity-50\"\n            >\n              Send\n            </button>\n          </form>\n        </div>\n\n        {/* Conversation History */}\n        <div className=\"bg-gray-800/50 rounded-2xl p-6 max-h-96 overflow-y-auto\">\n          {conversation.length === 0 ? (\n            <p className=\"text-center text-gray-500\">No conversation yet...</p>\n          ) : (\n            conversation.map((msg) => (\n              <div key={msg.id} className=\"mb-4 p-4 rounded-lg bg-gray-700/50\">\n                <div className=\"font-medium text-sm text-gray-400 mb-2\">\n                  {msg.role === 'user' ? 'You' : 'Sarah & Marcus Discussion'}\n                </div>\n                <div className=\"text-white\">\n                  {msg.content}\n                </div>\n                {msg.segments && (\n                  <div className=\"mt-3 space-y-1 text-sm\">\n                    {msg.segments.map((seg, i) => (\n                      <div key={i} className=\"text-gray-300\">\n                        <span className=\"font-medium text-blue-400\">{seg.speaker}:</span> {seg.text}\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACmB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,QAAQ,CAAC,SAAS,CAAC;EAEnE,MAAMqB,cAAc,GAAGpB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMqB,cAAc,GAAGrB,MAAM,CAAC,IAAI,CAAC;;EAEnC;EACAC,SAAS,CAAC,MAAM;IACd,IAAI,yBAAyB,IAAIqB,MAAM,IAAI,mBAAmB,IAAIA,MAAM,EAAE;MACxE,MAAMC,iBAAiB,GAAGD,MAAM,CAACC,iBAAiB,IAAID,MAAM,CAACE,uBAAuB;MACpFJ,cAAc,CAACK,OAAO,GAAG,IAAIF,iBAAiB,CAAC,CAAC;MAChDH,cAAc,CAACK,OAAO,CAACC,UAAU,GAAG,IAAI;MACxCN,cAAc,CAACK,OAAO,CAACE,cAAc,GAAG,IAAI;MAC5CP,cAAc,CAACK,OAAO,CAACG,IAAI,GAAG,OAAO;MAErCR,cAAc,CAACK,OAAO,CAACI,QAAQ,GAAIC,KAAK,IAAK;QAC3C,IAAIC,eAAe,GAAG,EAAE;QACxB,KAAK,IAAIC,CAAC,GAAGF,KAAK,CAACG,WAAW,EAAED,CAAC,GAAGF,KAAK,CAACI,OAAO,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;UAC7D,IAAIF,KAAK,CAACI,OAAO,CAACF,CAAC,CAAC,CAACI,OAAO,EAAE;YAC5BL,eAAe,IAAID,KAAK,CAACI,OAAO,CAACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAACpB,UAAU;UACnD;QACF;QACA,IAAImB,eAAe,EAAE;UACnBlB,aAAa,CAACkB,eAAe,CAAC;UAC9BM,WAAW,CAACN,eAAe,EAAE,IAAI,CAAC;UAClCO,aAAa,CAAC,CAAC;QACjB;MACF,CAAC;MAEDlB,cAAc,CAACK,OAAO,CAACc,KAAK,GAAG,MAAMhC,cAAc,CAAC,KAAK,CAAC;MAC1Da,cAAc,CAACK,OAAO,CAACe,OAAO,GAAG,MAAMjC,cAAc,CAAC,KAAK,CAAC;IAC9D;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIrB,cAAc,CAACK,OAAO,IAAI,CAACnB,WAAW,IAAI,CAACE,YAAY,IAAI,CAACE,UAAU,EAAE;MAC1EH,cAAc,CAAC,IAAI,CAAC;MACpBM,aAAa,CAAC,EAAE,CAAC;MACjBO,cAAc,CAACK,OAAO,CAACiB,KAAK,CAAC,CAAC;IAChC;EACF,CAAC;EAED,MAAMJ,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIlB,cAAc,CAACK,OAAO,IAAInB,WAAW,EAAE;MACzCC,cAAc,CAAC,KAAK,CAAC;MACrBa,cAAc,CAACK,OAAO,CAACkB,IAAI,CAAC,CAAC;IAC/B;EACF,CAAC;EAED,MAAMN,WAAW,GAAG,MAAAA,CAAOO,IAAI,EAAEC,OAAO,GAAG,KAAK,KAAK;IACnD,IAAI,CAACD,IAAI,CAACE,IAAI,CAAC,CAAC,EAAE;IAElBrC,eAAe,CAAC,IAAI,CAAC;IACrBQ,YAAY,CAAC,EAAE,CAAC;IAChBJ,aAAa,CAAC,EAAE,CAAC;IAEjB,MAAMkC,WAAW,GAAG;MAClBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAE,MAAM;MACZC,OAAO,EAAER,IAAI;MACbS,SAAS,EAAE,IAAIJ,IAAI,CAAC,CAAC;MACrBJ;IACF,CAAC;IAED9B,eAAe,CAACuC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEP,WAAW,CAAC,CAAC;IAE/C,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAElB,IAAI;UAAEmB,mBAAmB,EAAE;QAAG,CAAC;MACjE,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC;MAElC,MAAMI,cAAc,GAAG;QACrBpB,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,CAAC;QAClBC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEY,IAAI,CAACK,OAAO,IAAI,YAAY;QACrChB,SAAS,EAAE,IAAIJ,IAAI,CAAC,CAAC;QACrBqB,QAAQ,EAAEN,IAAI,CAACM,QAAQ,IAAI;MAC7B,CAAC;MAEDvD,eAAe,CAACuC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEc,cAAc,CAAC,CAAC;;MAElD;MACA,IAAIJ,IAAI,CAACM,QAAQ,IAAIN,IAAI,CAACM,QAAQ,CAACnC,MAAM,GAAG,CAAC,EAAE;QAC7CoC,YAAY,CAACP,IAAI,CAACM,QAAQ,EAAE,CAAC,CAAC;MAChC;IAEF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;IAEA/D,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,MAAM8D,YAAY,GAAG,MAAAA,CAAOD,QAAQ,EAAEG,KAAK,KAAK;IAC9C,IAAI,CAACH,QAAQ,IAAIG,KAAK,IAAIH,QAAQ,CAACnC,MAAM,EAAE;MACzCxB,aAAa,CAAC,KAAK,CAAC;MACpB;IACF;IAEAA,aAAa,CAAC,IAAI,CAAC;IACnB,MAAM+D,OAAO,GAAGJ,QAAQ,CAACG,KAAK,CAAC;IAC/BP,OAAO,CAACC,GAAG,CAAC,mBAAmBM,KAAK,GAAG,CAAC,KAAKC,OAAO,CAACC,OAAO,EAAE,CAAC;IAE/D,IAAID,OAAO,CAACE,UAAU,EAAE;MACtB;MACA,IAAI;QACF,MAAMC,SAAS,GAAG,IAAIC,UAAU,CAC9BJ,OAAO,CAACE,UAAU,CAACG,KAAK,CAAC,SAAS,CAAC,CAACC,GAAG,CAACC,IAAI,IAAIC,QAAQ,CAACD,IAAI,EAAE,EAAE,CAAC,CACpE,CAAC;QACD,MAAME,SAAS,GAAG,IAAIC,IAAI,CAAC,CAACP,SAAS,CAAC,EAAE;UAAEQ,IAAI,EAAE;QAAa,CAAC,CAAC;QAC/D,MAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACL,SAAS,CAAC;QAE/C,MAAMM,KAAK,GAAG,IAAIC,KAAK,CAACJ,QAAQ,CAAC;QACjCjE,cAAc,CAACI,OAAO,GAAGgE,KAAK;QAE9BA,KAAK,CAACE,OAAO,GAAG,MAAM;UACpBJ,GAAG,CAACK,eAAe,CAACN,QAAQ,CAAC;UAC7BO,UAAU,CAAC,MAAMtB,YAAY,CAACD,QAAQ,EAAEG,KAAK,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC;QAC1D,CAAC;QAEDgB,KAAK,CAACjD,OAAO,GAAG,MAAM;UACpB0B,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;UACrDoB,GAAG,CAACK,eAAe,CAACN,QAAQ,CAAC;UAC7BQ,WAAW,CAACpB,OAAO,EAAE,MAAMH,YAAY,CAACD,QAAQ,EAAEG,KAAK,GAAG,CAAC,CAAC,CAAC;QAC/D,CAAC;QAED,MAAMgB,KAAK,CAACM,IAAI,CAAC,CAAC;QAClB7B,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;QACnC;MAEF,CAAC,CAAC,OAAO6B,CAAC,EAAE;QACV9B,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE6B,CAAC,CAAC;MACvC;IACF;;IAEA;IACAF,WAAW,CAACpB,OAAO,EAAE,MAAMH,YAAY,CAACD,QAAQ,EAAEG,KAAK,GAAG,CAAC,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMqB,WAAW,GAAGA,CAACpB,OAAO,EAAEuB,UAAU,KAAK;IAC3C,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACzB,OAAO,CAAC9B,IAAI,CAAC;IAC5D,MAAMwD,MAAM,GAAGC,eAAe,CAACC,SAAS,CAAC,CAAC;;IAE1C;IACA,IAAI5B,OAAO,CAACC,OAAO,KAAK,OAAO,EAAE;MAC/B,MAAM4B,WAAW,GAAGH,MAAM,CAACI,IAAI,CAACC,CAAC,IAC/BA,CAAC,CAAC7E,IAAI,CAAC8E,UAAU,CAAC,IAAI,CAAC,KACtBD,CAAC,CAACE,IAAI,CAACC,QAAQ,CAAC,UAAU,CAAC,IAAIH,CAAC,CAACE,IAAI,CAACC,QAAQ,CAAC,OAAO,CAAC,CAC1D,CAAC;MACD,IAAIL,WAAW,EAAEL,SAAS,CAACW,KAAK,GAAGN,WAAW;MAC9CL,SAAS,CAACY,KAAK,GAAG,GAAG;IACvB,CAAC,MAAM;MACL,MAAMC,SAAS,GAAGX,MAAM,CAACI,IAAI,CAACC,CAAC,IAC7BA,CAAC,CAAC7E,IAAI,CAAC8E,UAAU,CAAC,IAAI,CAAC,KACtBD,CAAC,CAACE,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,IAAIH,CAAC,CAACE,IAAI,CAACC,QAAQ,CAAC,QAAQ,CAAC,CACvD,CAAC;MACD,IAAIG,SAAS,EAAEb,SAAS,CAACW,KAAK,GAAGE,SAAS;MAC1Cb,SAAS,CAACY,KAAK,GAAG,GAAG;IACvB;IAEAZ,SAAS,CAACc,IAAI,GAAG,GAAG;IACpBd,SAAS,CAACe,MAAM,GAAG,GAAG;IAEtBf,SAAS,CAAC3D,KAAK,GAAG,MAAM;MACtBsD,UAAU,CAACI,UAAU,EAAE,GAAG,CAAC;IAC7B,CAAC;IAEDI,eAAe,CAACa,KAAK,CAAChB,SAAS,CAAC;IAChChC,OAAO,CAACC,GAAG,CAAC,mBAAmBO,OAAO,CAACC,OAAO,EAAE,CAAC;EACnD,CAAC;EAED,MAAMwC,YAAY,GAAGA,CAAA,KAAM;IACzBxG,aAAa,CAAC,KAAK,CAAC;IACpB0F,eAAe,CAACe,MAAM,CAAC,CAAC;IACxB,IAAI/F,cAAc,CAACI,OAAO,EAAE;MAC1BJ,cAAc,CAACI,OAAO,CAAC4F,KAAK,CAAC,CAAC;MAC9BhG,cAAc,CAACI,OAAO,GAAG,IAAI;IAC/B;EACF,CAAC;EAED,oBACEtB,OAAA;IAAKmH,SAAS,EAAC,wFAAwF;IAAAC,QAAA,eACrGpH,OAAA;MAAKmH,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCpH,OAAA;QAAKmH,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BpH,OAAA;UAAImH,SAAS,EAAC,yBAAyB;UAAAC,QAAA,EAAC;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrExH,OAAA;UAAGmH,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eAENxH,OAAA;QAAKmH,SAAS,EAAC,qCAAqC;QAAAC,QAAA,gBAElDpH,OAAA;UAAKmH,SAAS,EAAC,0BAA0B;UAAAC,QAAA,eACvCpH,OAAA;YACEyH,OAAO,EAAEtH,WAAW,GAAGgC,aAAa,GAAGG,cAAe;YACtDoF,QAAQ,EAAErH,YAAY,IAAIE,UAAW;YACrC4G,SAAS,EAAE,mFACThH,WAAW,GAAG,0BAA0B,GACxCE,YAAY,GAAG,eAAe,GAC9BE,UAAU,GAAG,aAAa,GAC1B,+DAA+D,sBAC1C;YAAA6G,QAAA,EAEtB/G,YAAY,GAAG,GAAG,GAAG;UAAI;YAAAgH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAGNxH,OAAA;UAAKmH,SAAS,EAAC,kBAAkB;UAAAC,QAAA,GAC9BjH,WAAW,iBAAIH,OAAA;YAAGmH,SAAS,EAAC,gBAAgB;YAAAC,QAAA,GAAC,iBAAc,EAAC3G,UAAU,EAAC,IAAC;UAAA;YAAA4G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,EAC5EnH,YAAY,iBAAIL,OAAA;YAAGmH,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAAsB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,EACzEjH,UAAU,iBAAIP,OAAA;YAAGmH,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,EAC1D,CAACrH,WAAW,IAAI,CAACE,YAAY,IAAI,CAACE,UAAU,iBAC3CP,OAAA;YAAGmH,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAkC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACnE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EAGLjH,UAAU,iBACTP,OAAA;UAAKmH,SAAS,EAAC,0BAA0B;UAAAC,QAAA,eACvCpH,OAAA;YACEyH,OAAO,EAAET,YAAa;YACtBG,SAAS,EAAC,kDAAkD;YAAAC,QAAA,EAC7D;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN,eAGDxH,OAAA;UAAM2H,QAAQ,EAAG9B,CAAC,IAAK;YAAEA,CAAC,CAAC+B,cAAc,CAAC,CAAC;YAAE1F,WAAW,CAACrB,SAAS,CAAC;UAAE,CAAE;UAACsG,SAAS,EAAC,YAAY;UAAAC,QAAA,gBAC5FpH,OAAA;YACEkF,IAAI,EAAC,MAAM;YACX2C,KAAK,EAAEhH,SAAU;YACjBiH,QAAQ,EAAGjC,CAAC,IAAK/E,YAAY,CAAC+E,CAAC,CAACkC,MAAM,CAACF,KAAK,CAAE;YAC9CG,WAAW,EAAC,0BAA0B;YACtCN,QAAQ,EAAEvH,WAAW,IAAIE,YAAY,IAAIE,UAAW;YACpD4G,SAAS,EAAC;UAA4I;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvJ,CAAC,eACFxH,OAAA;YACEkF,IAAI,EAAC,QAAQ;YACbwC,QAAQ,EAAE,CAAC7G,SAAS,CAAC8B,IAAI,CAAC,CAAC,IAAIxC,WAAW,IAAIE,YAAY,IAAIE,UAAW;YACzE4G,SAAS,EAAC,wEAAwE;YAAAC,QAAA,EACnF;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGNxH,OAAA;QAAKmH,SAAS,EAAC,yDAAyD;QAAAC,QAAA,EACrEzG,YAAY,CAACqB,MAAM,KAAK,CAAC,gBACxBhC,OAAA;UAAGmH,SAAS,EAAC,2BAA2B;UAAAC,QAAA,EAAC;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,GAEnE7G,YAAY,CAACkE,GAAG,CAAEoD,GAAG,iBACnBjI,OAAA;UAAkBmH,SAAS,EAAC,oCAAoC;UAAAC,QAAA,gBAC9DpH,OAAA;YAAKmH,SAAS,EAAC,wCAAwC;YAAAC,QAAA,EACpDa,GAAG,CAACjF,IAAI,KAAK,MAAM,GAAG,KAAK,GAAG;UAA2B;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD,CAAC,eACNxH,OAAA;YAAKmH,SAAS,EAAC,YAAY;YAAAC,QAAA,EACxBa,GAAG,CAAChF;UAAO;YAAAoE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,EACLS,GAAG,CAAC9D,QAAQ,iBACXnE,OAAA;YAAKmH,SAAS,EAAC,wBAAwB;YAAAC,QAAA,EACpCa,GAAG,CAAC9D,QAAQ,CAACU,GAAG,CAAC,CAACqD,GAAG,EAAErG,CAAC,kBACvB7B,OAAA;cAAamH,SAAS,EAAC,eAAe;cAAAC,QAAA,gBACpCpH,OAAA;gBAAMmH,SAAS,EAAC,2BAA2B;gBAAAC,QAAA,GAAEc,GAAG,CAAC1D,OAAO,EAAC,GAAC;cAAA;gBAAA6C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,KAAC,EAACU,GAAG,CAACzF,IAAI;YAAA,GADnEZ,CAAC;cAAAwF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEN,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN;QAAA,GAfOS,GAAG,CAACpF,EAAE;UAAAwE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgBX,CACN;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtH,EAAA,CA/RQD,GAAG;AAAAkI,EAAA,GAAHlI,GAAG;AAiSZ,eAAeA,GAAG;AAAC,IAAAkI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}